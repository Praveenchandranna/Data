name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      Feature_Branch:
        type: String
        Description: Please Enter Branch name
        required: true
      environment:
        type: choice
        description: Which environment to deploy to
        options:
          - Intdev
          - production
        default: "Intdev"
        required: true
      testlevel:
        type: choice
        description: "Select Test class Run Type "
        options:
          - NoTestRun
          - RunLocalTests
          - RunSpecifiedTests
          - RunAllTestsInOrg
        default: "RunSpecifiedTests"
        required: true
      validateOnly:
        description: "Run the deployment as validation only"
        type: boolean
        default: true


jobs:
  deploy-partial-sandbox:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.environment == 'Intdev' }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3 
        with:
          fetch-depth: 0
      - name: Get Workspace
        run: |
            echo "${{ github.workspace }}"
            echo $GITHUB_WORKSPACE
      - name: Install SFDX
        run: |
          npm install --global sfdx-cli
          sfdx --version
      - name: Login To Org
        run: |
          sfdx org login sfdx-url --set-default --sfdx-url-file <(echo "${{ secrets.SFDX_AUTH_URL_INTDEV }}")

      - name: Run Test Classes
        env:
          SFDX_testclass_Gen: ${{ github.workspace }}/manifest/${{github.event.inputs.Feature_Branch}}_testclass.txt
          SFDX_Package_Gen: ${{ github.workspace }}/manifest/${{github.event.inputs.Feature_Branch}}_package.xml
        run: |
          cat SFDX_testclass_Gen
          echo "cat ${SFDX_testclass_Gen}"
          if [ "${{ github.event.inputs.testlevel}}" == "RunSpecifiedTests"]; then
              sfdx force:source:deploy --checkonly -w 500 -x ${SFDX_Package_Gen} --targetusername ${{ secrets.SFDX_AUTH_URL_INTDEV }} -l ${{github.event.inputs.testlevel}} <cat ${SFDX_testclass_Gen} --wait 500
          elif [ "${{ github.event.inputs.testlevel}}" == "NoTestRun"]; then
              sfdx force:source:deploy --checkonly -w 500 -x ${SFDX_Package_Gen} --targetusername ${{ secrets.SFDX_AUTH_URL_INTDEV }} -l ${{github.event.inputs.testlevel}} --wait 500    
          else
              sfdx apex run test -l ${{github.event.inputs.testlevel}} -w 15
          fi
      - name: Deploy to intdev
        uses: ./.github/actions/deploy-environment
        with:
          sfdx_auth_url: ${{ secrets.SFDX_AUTH_URL_INTDEV }}
          environmentName: ${{ github.event.inputs.environment }}
          validateOnly: ${{ github.event.inputs.validateOnly }}

  deploy-prod:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.environment == 'production' }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get Workspace
        run: |
          echo "${{ github.workspace }}"
          echo $GITHUB_WORKSPACE
      - name: Install SFDX
        run: |
          npm install --global sfdx-cli
          sfdx --version
      - name: Login To Org
        run: |
          sfdx org login sfdx-url --set-default --sfdx-url-file <(echo "${{ secrets.SFDX_AUTH_URL_PRODUCTION }}")
      - name: Extract branch name
        run: |
          echo " ${{ github.head_ref || github.ref_name }} "
      - name: Run Test Classes
        env:
          SFDX_testclass_Gen: ${{github.workspace }}/manifest/${{github.event.inputs.Feature_Branch}}_testclass.txt
          SFDX_Package_Gen: ${{ github.workspace }}/manifest/${{github.event.inputs.Feature_Branch}}_package.xml
          
        run: |
          cat "${SFDX_testclass_Gen}"
          sfdx force:source:deploy --checkonly -w 500 -x ${SFDX_Package_Gen} --targetusername ${{ secrets.SFDX_AUTH_URL_INTDEV }} -l ${{github.event.inputs.testlevel}} -r CCClassVfs_test --wait 500

      - name: Deploy to production
        uses: ./.github/actions/deploy-environment
        with:
          sfdx_auth_url: ${{ secrets.SFDX_AUTH_URL_PRODUCTION }}
          environmentName: ${{ github.event.inputs.environment }}
          validateOnly: ${{ github.event.inputs.validateOnly }}